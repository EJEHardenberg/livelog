'''
	Python version of livelog. 
	Used to communicate, via POST requests, with the logging server. Instances of this are to be created and operated on by the 
	client code.
'''
import json, urllib, urllib2, inspect

class LiveLog():
	fileName = None
	sessionID = None

	def __init__(self, fileName, sessionID):
		'''
			default constructor. initialize LiveLog objects with two parameters.
			@params:
				fileName, the name of the client file upon which logging is being performed.
				sessionID, the unique identifier for the users session, generated by front_end/new_session.php
		'''
		self.fileName = fileName
		self.sessionID = sessionID

	def postToServer(self, var):
		'''
			postToServer. called when a user wishes to log var to the server.
			@params:
				var, the variable that the client wishes to log on the server
		'''
		# frame,filename,line_number,function_name,lines,index = inspect.getouterframes(inspect.currentframe())[1]
		lineNumber = inspect.getouterframes(inspect.currentframe())[1][2]
		url = 'http://localhost/LiveLog/front_end/LiveLogCatch.php'
		arr = {'filename':self.fileName, 'logData':var, 'lineNumber':lineNumber}
		data = 'data=' + json.dumps(arr) + '&sessionID=' + self.sessionID

		request = urllib2.Request(url, data)
		response = urllib2.urlopen(request)

		# print help(request)
		# print "Data we have sent:"
		# print request.get_data()
		# print "\n"
		# # print help(response)
		# print "response we have received:"
		# print response.read()
